{"version":3,"file":"static/js/836.7103da82.chunk.js","mappings":"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","sources":["webpack://goit-react-hw5-movies/./src/components/SearchBar/SearchBar.module.css?35a0","components/SearchBar/SearchBar.jsx","components/MovieList/MovieList.jsx","pages/MoviesPage/MoviesPage.jsx","services/API.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"inputWrapper\":\"SearchBar_inputWrapper__Y3m19\",\"input\":\"SearchBar_input__bIy50\",\"searchIcon\":\"SearchBar_searchIcon__QhQBu\"};","import propTypes from 'prop-types';\nimport css from './SearchBar.module.css';\nimport { HiSearch } from 'react-icons/hi';\nimport { DebounceInput } from 'react-debounce-input';\n\nexport const SearchBar = ({ onChange, value }) => {\n  const handleChange = e => {\n    onChange?.(e.target.value);\n  };\n\n  return (\n    <div className={css.inputWrapper}>\n      <DebounceInput\n        className={css.input}\n        value={value}\n        type=\"text\"\n        minLength={2}\n        debounceTimeout={500}\n        placeholder={'Search Movies...'}\n        onChange={handleChange}\n      />\n      <HiSearch className={css.searchIcon} />\n    </div>\n  );\n};\n\nSearchBar.propTypes = {\n  value: propTypes.string,\n  onChange: propTypes.func.isRequired,\n};\n","import { Link } from 'react-router-dom';\nexport const MovieList = ({ movies }) => {\n  return (\n    <ul>\n      {movies.map(movie => (\n        <li key={movie.id}>\n          <Link to={`/movies/${movie.id}`}>{movie.title}</Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import { Suspense, useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { fetchMovieByQuery } from 'services/API';\nimport { SearchBar } from '../../components/SearchBar/SearchBar';\nimport { MovieList } from '../../components/MovieList/MovieList';\nimport { Loader } from 'components/Loader/Loader';\n\nconst MoviesPage = () => {\n  const [searchResults, setSearchResults] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [movieName, setMovieName] = useState('');\n\n  // const [isLoading, setIsLoading] = useState(false);\n\n  const updateQueryString = query => {\n    const nextParams = query !== '' ? { query } : {};\n    setSearchParams(nextParams);\n  };\n\n  useEffect(() => {\n    const movieName = searchParams.get('query') ?? '';\n    setMovieName(movieName);\n    (async () => {\n      try {\n        // setIsLoading(true);\n        const movies = await fetchMovieByQuery(movieName);\n        setSearchResults(movies);\n      } catch (error) {\n        console.error('Error fetching movies:', error);\n      } finally {\n        // setIsLoading(false);\n      }\n    })();\n  }, [searchParams]);\n\n  return (\n    <>\n      <SearchBar value={movieName} onChange={updateQueryString} />\n      {/* {isLoading ? (\n        <Loader />\n      ) : searchResults?.length > 0 ? (\n        <MovieList movies={searchResults} />\n      ) : (\n        <h2>Nothing found! Please try again</h2>\n      )} */}\n      <Suspense fallback={<Loader />}>\n        {searchResults?.length > 0 ? (\n          <MovieList movies={searchResults} />\n        ) : movieName ? (\n          <h2>Nothing found! Please try again</h2>\n        ) : (\n          ''\n        )}\n      </Suspense>\n    </>\n  );\n};\nexport default MoviesPage;\n","import axios from 'axios';\n\nconst API_KEY = '0215792fb43df8eb2b6c2d873b4932d6';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.params = {\n  api_key: API_KEY,\n};\n\nexport const fetchTrendingMovies = async () => {\n  const response = await axios.get(`trending/movie/day`);\n  return response.data.results;\n};\n\nexport const fetchMovieByQuery = async movieName => {\n  const response = await axios.get(`search/movie?query=${movieName}`);\n  return response?.data?.results;\n};\n\nexport const fetchMovieDetails = async movieId => {\n  const response = await axios.get(`movie/${movieId}`);\n  return response.data;\n};\n\nexport const fetchMovieCast = async movieId => {\n  const response = await axios.get(`movie/${movieId}/credits?`);\n  return response.data.cast;\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const response = await axios.get(`movie/${movieId}/reviews?`);\n  return response.data.results;\n};\n"],"names":["SearchBar","_ref","onChange","value","_jsxs","className","css","children","_jsx","DebounceInput","type","minLength","debounceTimeout","placeholder","e","target","HiSearch","MovieList","movies","map","movie","Link","to","concat","id","title","_useState","useState","_useState2","_slicedToArray","searchResults","setSearchResults","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","_useState3","_useState4","movieName","setMovieName","useEffect","_searchParams$get","get","_asyncToGenerator","_regeneratorRuntime","_callee","_context","prev","next","fetchMovieByQuery","sent","t0","console","error","finish","stop","_Fragment","query","Suspense","fallback","Loader","length","axios","api_key","fetchTrendingMovies","response","abrupt","data","results","apply","arguments","_ref2","_callee2","_response$data","_context2","_x","fetchMovieDetails","_ref3","_callee3","movieId","_context3","_x2","fetchMovieCast","_ref4","_callee4","_context4","cast","_x3","fetchMovieReviews","_ref5","_callee5","_context5","_x4"],"sourceRoot":""}